// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	statuses "immersiveApp/features/statuses"

	mock "github.com/stretchr/testify/mock"
)

// StatusServiceInterface is an autogenerated mock type for the StatusServiceInterface type
type StatusServiceInterface struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *StatusServiceInterface) GetAll() ([]statuses.StatusEntity, error) {
	ret := _m.Called()

	var r0 []statuses.StatusEntity
	if rf, ok := ret.Get(0).(func() []statuses.StatusEntity); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]statuses.StatusEntity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewStatusServiceInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewStatusServiceInterface creates a new instance of StatusServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewStatusServiceInterface(t mockConstructorTestingTNewStatusServiceInterface) *StatusServiceInterface {
	mock := &StatusServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
